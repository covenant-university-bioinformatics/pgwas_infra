---
# Default values for microservice.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
  replicaCount: 1
  environment:
  # list of key: value
  # GLOBAL1: value

## Set default image, imageTag, and imagePullPolicy.
## ref: https://hub.docker.com/r/apache/nifi/
##

image: skafoldcfg
imageConfig:
  repository:
  tag: "latest"
  pullPolicy: IfNotPresent

#command: ['echo pre-install Job Pod is Running']

replicaCount: 1

# command: ["/bin/sh","-c"]
# args: ["echo 'consuming a message'; sleep 5"]

nameOverride: deployment
fullnameOverride: ""
namespace: apps
# Annotation for the Deployment
annotations: {}

#ARGS: both works

# List of services
services:
  - name: web
    type: ClusterIP
    annotations: {}
    specs:
      - port: 3000
        targetPort: 3000
        name: port-svc

#targetPort: is the port the container accepts traffic on,
#port: is the abstracted Service port, which can be any port other pods use to access the Service
#https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.16/#serviceport-v1-core

environment:
  - name: NATS_URL
    valueFrom:
      configMapKeyRef:
        name: nats-configmap
        key: nats_url
  - name: NATS_CLUSTER_ID
    value: pgwas-internal
  - name: NATS_CLIENT_ID
    valueFrom:
      fieldRef: metadata.name
  - name: JWT_KEY
    valueFrom:
      secretKeyRef:
        name: jwt-secret
        key: JWT_KEY
  - name: MONGO_HOST
    valueFrom:
      configMapKeyRef:
        name: jobsmongo-configmap
        key: database_url
  - name: MONGODB_USER
    valueFrom:
      secretKeyRef:
        name: mongo-secret
        key: mongo-root-username
  - name: MONGODB_PASSWORD
    valueFrom:
      secretKeyRef:
        name: mongo-secret
        key: mongo-root-password
  - name: MONGODB_NAME
    valueFrom:
      secretKeyRef:
        name: mongo-secret
        key: mongo-jobs-db
  - name: MONGODB_PODNAME
    value: jobs-mongo
  #  - name: REDIS_HOST
  #    valueFrom:
  #      configMapKeyRef:
  #        name: expiration-redis-configmap
  #        key: redis_host
#  - name: POSTGRES_URI
#    valueFrom:
#      configMapKeyRef:
#        name: auth-postgres-configmap
#        key: database_url

dbConfigMap: false
eventConfigMap: false
redisConfigMap: false

volumes:
  enabled: true
  pvc:
    enabled: true
    existing_claim: workers-storage
    name:
    mountPath: /pv/analysis
    size: 20Gi
    class:
    accessModes:
      - ReadWriteOnce

#  configMaps:
#    - name: sqlfile
#      mountPath: /data/sqls
#      data:
#        test.conf: |
#          hello

fileConfigMap:
#  - name: sqlfile
#    volumeName: db
#    mountPath: /data/sqls

## Configure Ingress based on the documentation here: https://kubernetes.io/docs/concepts/services-networking/ingress/
##
ingress:
  enabled: false

## Configure resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
##
resources:
  limits:
    cpu: 1
    memory: 2000Mi
  requests:
    cpu: 500m
    memory: 500Mi

enableInitContainers: false
initContainers:
  init:
    name: checkservice
    image: busybox:1.28
    command: [ 'sh', '-c', "until nslookup personnel-postgres-database-svc-web.dbs; do echo waiting for postgresdb service; sleep 2; done" ]
  createdb:
    name: createdb
    image: governmentpaas/psql
    env:
      - name: PGPASSWORD
        valueFrom:
          secretKeyRef:
            key: pg-root-password
            name: postgres-secret
      - name: SQL_FILE
        valueFrom:
          configMapKeyRef:
            name: sqlfile
            key: createdb
    command:
      - "psql"
      - "-w"
      - "-h"
      - "personnel-postgres-database-svc-web.dbs"
      - "-p"
      - "5432"
      - "-U"
      - "cubre_root"
      - "-f"
      - "/data/sqls/createdb"
      - "postgres"
    volumeMount:
      name: db-volume
      mountPath: /data/sqls
