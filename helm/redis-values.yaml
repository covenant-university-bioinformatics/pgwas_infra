---
# Default values for microservice.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
  replicaCount: 1
  environment:
  # list of key: value
  # GLOBAL1: value

## Set default image, imageTag, and imagePullPolicy.
## ref: https://hub.docker.com/r/apache/nifi/
##

image: redis
imageConfig:
  repository:
  tag: "latest"
  pullPolicy: IfNotPresent

#command: ['echo pre-install Job Pod is Running']

replicaCount: 1

# command: ["/bin/sh","-c"]
# args: ["echo 'consuming a message'; sleep 5"]

nameOverride: database
fullnameOverride: ""
namespace: dbs
app:
  namespace: apps
# Annotation for the Deployment
annotations: {}

#ARGS:
args:

# List of services
services:
  - name: web
    type: ClusterIP
    annotations: {}
    specs:
      - port: 6379
        targetPort: 6379
        name: redis-svc
  - name: external
    type: NodePort
    annotations: {}
    specs:
      - port: 1234
        targetPort: 6379
        name: redis-external-svc

environment:
#  - name: POSTGRES_USER
#    valueFrom:
#      secretKeyRef:
#        name: postgres-secret
#        key: pg-root-username
#  - name: POSTGRES_DB
#    valueFrom:
#      secretKeyRef:
#        name: postgres-secret
#        key: pg-db
#  - name: POSTGRES_PASSWORD
#    valueFrom:
#      secretKeyRef:
#        name: postgres-secret
#        key: pg-root-password
#  - name: PGDATA
#    value: /var/lib/postgresql/data/pgdata

dbConfigMap: true
eventConfigMap: false
redisConfigMap: false

volumes:
  enabled: true
  pvc:
    enabled: true
    existing_claim:
    name:
    mountPath: /data
    size: 10Gi
    class: nfs-client
    accessModes:
      - ReadWriteOnce
  internal:
    enabled: false
    hostpath:
      - name:
        path:
        mountPath: /local/datasets

#  configMaps:
#    - name: test
#      mountPath: /test
#      data:
#        test.conf: |
#          hello

fileConfigMap: false

## Configure Ingress based on the documentation here: https://kubernetes.io/docs/concepts/services-networking/ingress/
##
ingress:
  enabled: false
## Configure resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
##
resources:
  limits:
    cpu: 1
    memory: 1000Mi
 requests:
    cpu: 300m
    memory: 300Mi
